<?php
namespace Home\Controller;
use Think\Controller;
header('content-type:text/html;charset=utf-8');
class GoodsdetailController extends Controller {
    public function index(){
        
        $goods=M('goods');
        $detail=M('goods_detail');
        $gid=$_GET['gid'];
        // dump($gid);
        //  die;
        


        $res=$goods->where('mi_goods.gid='.$gid)
                    ->field('mi_goods.*,mi_goods_detail.*')
                   ->join("left join mi_goods_detail on mi_goods.gid = mi_goods_detail.gid")
                   ->find();
         // dump($res);
         // die;
        $this->assign('goods',$res);
    

         
        $this->display();
       }

    public function index2(){
    	$type=M('type');
    	$arr=$type->select();
    	$this->assign('type',$arr);
        $this->display('index2');
    }

    public function shopcar(){
        $goods=M('goods');
        $detail=M('goods_detail');

        $res=$goods->field('mi_goods.*,mi_goods_detail.*')
                   ->join('left join mi_goods_detail on mi_goods.gid = mi_goods_detail.gid = 1')
                   ->find();
         // dump($res);
        $this->assign('goods',$res);


        $this->display('shopcar');
    }
    public function orderbefore(){
        $this->display('orderbefore');

    }
    

    //附件的查询
    public function attdetail(){


        $this->display();

    }







    // //商品的插入
    // public function insert(){

    //         $upload = new \Think\Upload();// 实例化上传类  
    //         $upload->maxSize   =  2*1024*1024 ;// 设置附件上传大小  
    //         $upload->exts      =  array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型    
    //         $upload->autoSub  =false;
    //         $upload->rootPath  =  './Public/Uploads/'; // 设置附件上传目录  
    //         //声明命名规范
    //         // $upload->saveName = '';
    //           // 上传文件   
    //         $info   =   $upload->upload(); 
    //        // dump($info);  
    //          if(!$info) {// 上传错误提示错误信息     
    //             $this->error($upload->getError());  
    //               }else{// 上传成功 获取上传文件信息   
    //                foreach($info as $file){
    //             $pic = $file['savepath'].$file['savename']; 

    //                }
    //            }
    //            //自定义了goods类设置联表关系
    //             $type=D('type');
    //             $name=I('post.tname');
    //             $a=$type->where("tname='".$name."'")->getField('typeid');

    //             $p=I('post');
    //             $goods=D('goods');
    //             $data=array(
    //                 'typeid' => $a,
    //                 'gname' => $p['gname'],  
    //                 'price' => $p['price'],
    //                 'storage' => $p['storage'],
    //                 'verson' => $p['verson'],
    //                 'color' => $p['color'],
    //                 'store' => $p['store'],
    //                 'addtime' => $p['addtime'],
    //                 'keywords' => $p['keywords'],
    //                 'pic' => $pic,
    //                 'goods_detail' => array(
    //                     'screen' => '白色'
    //                     )

    //         );
    //     //联表应用要加relation(true)插入数据库图片名字要从图片上传成功是遍历使用
         
    //     $result=$goods->relation(true)->data($data)->add(); 
    //     // dump($result);        
                
      
    //     if($result){
    //         $this->success('添加成功','add');
    //     }else{
    //         $this->error('添加失败','add');
    //     }
    //      // $this->display();

    //  }

    // //商品的删除
    // public function delete(){
    //     $del=M('goods');
    //     $gid=I('get.gid');
    //    $result=$del->where('gid='.$gid)->delete();
    //    if($result){
    //         $this->success('删除成功',U('index'));
    //    }else{
    //         $this->error('删除失败','index');

    //    }
    // }
    // //商品的修改页面
    // public function mod(){
    //     $mod=M('goods');
    //     $id=I('get.gid');
    //     $goo=$mod->where('gid='.$id)->find();
    //     $this->assign('goods',$goo);
    //     $mod1=M('type');
    //     $this->display();
    // }

    // //对商品修改插入数据库
    // public function change(){
    //     $change=M('goods');
    //     $data=I('post.');
    //      // dump($data);
    //     $data1=array(
    //         'price' => $data['price'],
    //         'store' => $data['store']
    //         );
    //     // dump($data['gid']);
        
    //     $a=$change->where("gname='".$data["gname"]."'")->field('price,store')->data($data1)->save();
    //     if($a){
    //         $this->success('修改成功','index');
    //     }else{
    //         $this->error('修改失败','mod');
    //     }
    //     $this->display('index');
    // }

    // //展示商品详情
    // public function detail(){

    //     $detail=M('goods_detail');
    //     $result=$detail->select();
    //     // dump($result);
    //     $this->assign('res',$result);
    //     $this->display();

    // }
    // //修改商品详情
    // public function moddetail(){
    //     $model=M('goods_detail');
    //     $model1=$model->where('gid='.I("get.gid"))->find();
    //      // dump($model1);
    //     $this->assign('mod',$model1);

    //     $this->display();
    // }

    // //修改详情处理
    // public function changedetail(){
    //     $change=M('goods_detail');
    //     dump(I('post.'));
    //     // $change->create();
    //     $da=I('post.');
    //     $data1=array(
    //         'screen' => $da['screen'],
    //         'battery' => $da['battery'],
    //         'system' => $da['system'],
    //         'shell' => $da['shell']

    //         );
    //     $data=$change->where('gid='.I('post.gid'))->field('screen,battery,system,shell')->save($data1);
    //     dump($data);
    //     if($data){
    //         $this->success('修改成功','detail');
    //     }else{
    //         $this->error('修改失败','moddetail');
    //     }

    // } 


}
